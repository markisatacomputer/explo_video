"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}var PlayerController=function(){function t(r,e){var a=this;_classCallCheck(this,t);this.elId=r,this.mediaId=e,this.getPlayer().then(function(e){a.player=e;var t=document.createEvent("Event");t.initEvent("playerReady",!0,!0),document.getElementById(r).dispatchEvent(t)})}return _createClass(t,[{key:"getPlayer",value:function(){var r=this;return new Promise(function(e,t){e(document.getElementById(r.elId).querySelector(".html5-player"))})}},{key:"play",value:function(){"function"==typeof this.player.play&&this.player.play()}},{key:"pause",value:function(){"function"==typeof this.player.pause&&this.player.pause()}},{key:"update",value:function(e){var t=this;this.mediaId!==e.mediaId?this.updateSource(e).then(function(e){t.mediaId=e,t.play()},function(e){throw e}):this.play()}},{key:"updateSource",value:function(a){var n=this;return new Promise(function(t,e){document.getElementById(n.elId).querySelector(".highlight_img img:not(.icon)").setAttribute("src",a.thumb);document.getElementById(n.elId).className.replace(/media-format-\w+/g,"media-format-"+a.format),n.player.remove();var r=document.createElement(a.format);r.setAttribute("class","html5-player"),r.setAttribute("preload","auto"),r.setAttribute("poster",a.thumb),r.setAttribute("autoplay","true"),r.setAttribute("controls",""),Object.keys(a.mediaSources).forEach(function(e){var t=document.createElement("source");t.setAttribute("type",e),t.setAttribute("src",a.mediaSources[e]),r.appendChild(t)}),document.getElementById(n.elId).appendChild(r),n.getPlayer().then(function(e){n.player=e,t(a.mediaId)})})}}]),t}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBsYXllckNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiUGxheWVyQ29udHJvbGxlciIsImVsSWQiLCJtZWRpYUlkIiwiX3RoaXMiLCJ0aGlzIiwiX2NsYXNzQ2FsbENoZWNrIiwiZ2V0UGxheWVyIiwidGhlbiIsInBsYXllciIsInJlYWR5IiwiZG9jdW1lbnQiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImdldEVsZW1lbnRCeUlkIiwic2VsZiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicXVlcnlTZWxlY3RvciIsInBsYXkiLCJwYXVzZSIsIm1lZGlhIiwidXBkYXRlU291cmNlIiwiZXJyIiwiZWwiLCJzZXRBdHRyaWJ1dGUiLCJ0aHVtYiIsImNsYXNzTmFtZSIsInJlcGxhY2UiLCJmb3JtYXQiLCJjcmVhdGVFbGVtZW50IiwiT2JqZWN0Iiwia2V5cyIsIm1lZGlhU291cmNlcyIsImZvckVhY2giLCJrZXkiLCJzb3VyY2VfZWwiLCJmb3JtYXRfY2xhc3NuYW1lIiwiYXBwZW5kQ2hpbGQiLCJyZW1vdmUiXSwibWFwcGluZ3MiOiJ1WkFZTUEsNEJBRUosU0FBQUEsRUFBYUMsRUFBTUMsR0FBUyxJQUFBQyxFQUFBQyxLQUFBQyxnQkFBQUQsS0FBQUosR0FFMUJJLEtBQUtILEtBQU9BLEVBQ1pHLEtBQUtGLFFBQVVBLEVBQ2ZFLEtBQUtFLFlBQVlDLEtBQU0sU0FBQ0MsR0FOdEJSLEVBQUFBLE9BT2NRLEVBQ2QsSUFBSUMsRUFBUUMsU0FBU0MsWUFBWSxTQUNqQ0YsRUFBTUcsVUFBVSxlQUFlLEdBQU0sR0FQekNGLFNBQUFHLGVBQWFaLEdBQU1DLGNBQVNPLDhEQUMxQixJQUFJSyxFQUFPVixLQU1USyxPQUxVUixJQUFaYyxRQUFBLFNBQUFDLEVBQUFDLEdBRUFELEVBRGVkLFNBQWZXLGVBQUFDLEVBQUFiLE1BQUFpQixjQUFBLG1EQW9CK0IsbUJBQXBCZCxLQUFLSSxPQUFPVyxNQUFvQmYsS0FBS0ksT0FBT1csdUNBVnZELG1CQUFRZixLQUFHSSxPQUFYWSxPQUFBaEIsS0FBQUksT0FBQVksdUNBR0VKLEdBQ0QsSUFIREYsRUFBQVYsS0FNREEsS0FBQUYsVUFBQW1CLEVBQUFuQixRQWNHRSxLQUFLa0IsYUFBYUQsR0FBT2QsS0FBSyxTQUFDTCxHQUM3QlksRUFBS1osUUFBVUEsRUFDZlksRUFBS0ssUUFaVixTQUFBSSxHQUFBLE1BQUFBLElBZ0JHbkIsS0FBS2UsNENBSUlFLEdBQ1gsSUFBSVAsRUFBT1YsS0FlVG9CLE9BN0JTLElBQVhULFFBQUEsU0FBQUMsRUFBQUMsR0FFQVAsU0FBU1IsZUFBWW1CLEVBQU1uQixNQUEzQmdCLGNBQW9DLGlDQUFBTyxhQUFBLE1BQUFKLEVBQUFLLE9BR2hDWixTQUFLSyxlQUFMTCxFQUFBYixNQUFBMEIsVUFBQUMsUUFEZTFCLG9CQUNmLGdCQUFBbUIsRUFBQVEsUUFFU2YsRUFBQU4sT0FBTWUsU0FDbEIsSUFOREMsRUFNT2QsU0FBQW9CLGNBQUFULEVBQUFRLFFBQ0xMLEVBQUFDLGFBQUEsUUFBQSxnQkFDREQsRUFBQUMsYUFBQSxVQUFBLFFBQ0ZELEVBQUFDLGFBQUEsU0FBQUosRUFBQUssT0FrQkdGLEVBQUdDLGFBQWEsV0FBWSxRQUM1QkQsRUFBR0MsYUFBYSxXQUFZLElBQzVCTSxPQUFPQyxLQUFLWCxFQUFNWSxjQUFjQyxRQWxCaEIsU0FBQUMsR0FDbEIsSUFBSXJCLEVBQUpKLFNBQUFvQixjQUFBLFVBRUFNLEVBQVdYLGFBQUcsT0FBYVUsR0FDekJDLEVBQUFYLGFBQUEsTUFBQUosRUFBQVksYUFBQUUsSUFDQXpCLEVBQUFBLFlBQVNHLEtBRVRILFNBQUkyQixlQUFnQnZCLEVBQUdiLE1BQUFxQyxZQUF2QmQsR0FtQkFWLEVBQUtSLFlBQVlDLEtBQU0sU0FBQ0MsR0FoQnhCTSxFQUFLTixPQUFPK0IsRUFrQlZ2QixFQUFRSyxFQUFNbkIiLCJmaWxlIjoiUGxheWVyQ29udHJvbGxlci5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqICBNZWRpYSBPYmplY3QgUGxheWVyIENvbnRyb2wgLSBkZWZhdWx0IHBsYXllciBpcyBodG1sNSBtZWRpYSBlbGVtZW50XG4gKlxuICogQG1vZHVsZSBleHBsb192aWRlb1xuICpcbiAqXG4gKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FwcHMvRnVuZGFtZW50YWxzL0F1ZGlvX2FuZF92aWRlb19kZWxpdmVyeVxuICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9HdWlkZS9FdmVudHMvTWVkaWFfZXZlbnRzXG4gKlxuICpcbiAqL1xuXG5jbGFzcyBQbGF5ZXJDb250cm9sbGVyIHtcblxuICBjb25zdHJ1Y3RvciAoZWxJZCwgbWVkaWFJZCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB0aGlzLmVsSWQgPSBlbElkO1xuICAgIHRoaXMubWVkaWFJZCA9IG1lZGlhSWQ7XG4gICAgdGhpcy5nZXRQbGF5ZXIoKS50aGVuKCAocGxheWVyKSA9PiB7XG4gICAgICB0aGlzLnBsYXllciA9IHBsYXllcjtcbiAgICAgIHZhciByZWFkeSA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuICAgICAgcmVhZHkuaW5pdEV2ZW50KCdwbGF5ZXJSZWFkeScsIHRydWUsIHRydWUpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxJZCkuZGlzcGF0Y2hFdmVudChyZWFkeSk7XG4gICAgfSk7XG4gIH1cblxuICBnZXRQbGF5ZXIgKCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKCAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB2YXIgcGxheWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2VsZi5lbElkKS5xdWVyeVNlbGVjdG9yKCcuaHRtbDUtcGxheWVyJyk7XG4gICAgICByZXNvbHZlKHBsYXllcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfVxuXG4gIHBsYXkoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLnBsYXllci5wbGF5ID09ICdmdW5jdGlvbicpIHRoaXMucGxheWVyLnBsYXkoKTtcbiAgfVxuXG4gIHBhdXNlKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5wbGF5ZXIucGF1c2UgPT0gJ2Z1bmN0aW9uJykgdGhpcy5wbGF5ZXIucGF1c2UoKTtcbiAgfVxuXG4gIHVwZGF0ZShtZWRpYSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIGlmICh0aGlzLm1lZGlhSWQgIT09IG1lZGlhLm1lZGlhSWQpIHtcbiAgICAgIHRoaXMudXBkYXRlU291cmNlKG1lZGlhKS50aGVuKChtZWRpYUlkKSA9PiB7XG4gICAgICAgIHNlbGYubWVkaWFJZCA9IG1lZGlhSWQ7XG4gICAgICAgIHNlbGYucGxheSgpO1xuICAgICAgfSxcbiAgICAgIChlcnIpID0+IHsgdGhyb3coZXJyKTsgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGxheSgpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZVNvdXJjZShtZWRpYSkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoIChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIC8vICB1cGRhdGUgaGlnaGxpZ2h0IGltYWdlXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChzZWxmLmVsSWQpLnF1ZXJ5U2VsZWN0b3IoJy5oaWdobGlnaHRfaW1nIGltZzpub3QoLmljb24pJykuc2V0QXR0cmlidXRlKCdzcmMnLCBtZWRpYS50aHVtYik7XG4gICAgICAvLyAgdXBkYXRlIGNvbnRhaW5lciBjbGFzc1xuICAgICAgdmFyIGZvcm1hdF9jbGFzc25hbWUgPSAvbWVkaWEtZm9ybWF0LVxcdysvZztcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNlbGYuZWxJZCkuY2xhc3NOYW1lLnJlcGxhY2UoZm9ybWF0X2NsYXNzbmFtZSwgJ21lZGlhLWZvcm1hdC0nK21lZGlhLmZvcm1hdCk7XG4gICAgICAvLyAgcmVtb3ZlIHByZXZpb3VzIG1lZGlhIGVsZW1lbnRcbiAgICAgIHNlbGYucGxheWVyLnJlbW92ZSgpO1xuICAgICAgLy8gIGFkZCBuZXcgbWVkaWEgZWxlbWVudFxuICAgICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChtZWRpYS5mb3JtYXQpO1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCdjbGFzcycsICdodG1sNS1wbGF5ZXInKTtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgncHJlbG9hZCcsICdhdXRvJyk7XG4gICAgICBlbC5zZXRBdHRyaWJ1dGUoJ3Bvc3RlcicsIG1lZGlhLnRodW1iKTtcbiAgICAgIGVsLnNldEF0dHJpYnV0ZSgnYXV0b3BsYXknLCAndHJ1ZScpO1xuICAgICAgZWwuc2V0QXR0cmlidXRlKCdjb250cm9scycsICcnKTtcbiAgICAgIE9iamVjdC5rZXlzKG1lZGlhLm1lZGlhU291cmNlcykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHZhciBzb3VyY2VfZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzb3VyY2UnKTtcbiAgICAgICAgc291cmNlX2VsLnNldEF0dHJpYnV0ZSgndHlwZScsIGtleSk7XG4gICAgICAgIHNvdXJjZV9lbC5zZXRBdHRyaWJ1dGUoJ3NyYycsIG1lZGlhLm1lZGlhU291cmNlc1trZXldKTtcbiAgICAgICAgZWwuYXBwZW5kQ2hpbGQoc291cmNlX2VsKTtcbiAgICAgIH0pO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2VsZi5lbElkKS5hcHBlbmRDaGlsZChlbCk7XG4gICAgICAvLyAgdXBkYXRlIHBsYXllclxuICAgICAgc2VsZi5nZXRQbGF5ZXIoKS50aGVuKCAocGxheWVyKSA9PiB7XG4gICAgICAgIHNlbGYucGxheWVyID0gcGxheWVyO1xuICAgICAgICByZXNvbHZlKG1lZGlhLm1lZGlhSWQpO1xuICAgICAgfSk7XG5cbiAgICB9KTtcblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG59XG4iXX0=
